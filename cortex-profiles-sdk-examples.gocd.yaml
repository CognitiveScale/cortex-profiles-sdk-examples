format_version: 10
common:
  serviceBuild: &serviceBuild
    - build:
        clean_workspace: true
        jobs:
          Build:
            elastic_profile_id: gocd-agent-dind-2023
            tasks:
              - fetch:
                  pipeline: cortex-profiles-sdk
                  stage: build
                  job: Build
                  source: buildReport.json
                  is_file: yes
              - script: |
                  set -eu
                  mv buildReport.json profiles_sdk_build.json
                  export PROFILES_SDK_VERSION=$(cat profiles_sdk_build.json | jq .[0].docker_tag | cut -d ":" -f2- | sed -e 's/"//')

                  echo "artifactoryUser=${JFROG_USER}
                  artifactoryPassword=${JFROG_PASS}
                  PROFILES_SDK_VERSION=${PROFILES_SDK_VERSION}
                  systemProp.sonar.token=${SONAR_TOKEN}
                  systemProp.sonar.host.url=${SONAR_HOST_URL}" > gradle.properties
              - script: |
                  c12e-ci
  serviceBuildRc: &serviceBuildRc
    - build:
        clean_workspace: true
        jobs:
          Build:
            elastic_profile_id: gocd-agent-dind-2023
            tasks:
              - fetch:
                  pipeline: cortex-profiles-sdk-rc
                  stage: build
                  job: Build
                  source: buildReport.json
                  is_file: yes
              - script: |
                  set -eu
                  mv buildReport.json profiles_sdk_build.json
                  export PROFILES_SDK_VERSION=$(cat profiles_sdk_build.json | jq .[0].docker_tag | cut -d ":" -f2- | sed -e 's/"//')
                  
                  echo "artifactoryUser=${JFROG_USER}
                  artifactoryPassword=${JFROG_PASS}
                  PROFILES_SDK_VERSION=${PROFILES_SDK_VERSION}
                  systemProp.sonar.token=${SONAR_TOKEN}
                  systemProp.sonar.host.url=${SONAR_HOST_URL}" > gradle.properties
              - script: |
                  c12e-ci
pipelines:
  cortex-profiles-sdk-examples:
    group: fabric6
    materials:
      cortex-profiles-sdk:
        pipeline: cortex-profiles-sdk-rc
        stage: build
      cortex-profiles-sdk-examples:
        git: git@github.com:CognitiveScale/cortex-profiles-sdk-examples.git
        branch: main
    environment_variables:
      SONAR_USER_HOME: "/tmp"
    stages: *serviceBuildRc
  cortex-profiles-sdk-examples-pr:
    group: pull-requests
    label_template: ${COUNT}
    materials:
      cortex-profiles-sdk:
        pipeline: cortex-profiles-sdk
        stage: build
      cortex-profiles-sdk-examples:
        plugin_configuration:
          id: github.pr
          version: 1
        options:
          url: git@github.com:CognitiveScale/cortex-profiles-sdk-examples.git
          defaultBranch: main
    environment_variables:
      SONAR_USER_HOME: "/tmp"
    stages: *serviceBuild